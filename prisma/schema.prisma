datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

type CitaEnfermedad {
  id_enfermedad String   @map("_id") @db.ObjectId
  nombre_enf    String?
  fecha         DateTime @default(now()) @db.Date
}

type CitaEstudio {
  id_estudio        String   @map("_id") @db.ObjectId
  fecha_realizacion DateTime?
  codigo_referencia String?
  observaciones      String?
  resultado          String?
  tipo_estudio       String?
  medico_solicitante String?
}

type PacienteCita {
  id_paciente String?
  dni             String?
  nombre_paciente String?
    apellido_paciente String?

}

type CitaMedicamento {
  id_medicamento String
  nombre_med     String?
}

model Cita {
  id_cita           String            @id @default(auto()) @map("_id") @db.ObjectId
  motivoConsulta    String?
  fechaSolicitud    DateTime          
  hora              String?
  fechaModificacion DateTime? 
  observaciones     String?
  cancelada         Boolean           @default(false)
  enfermedades        CitaEnfermedad[]
  medicamentos       CitaMedicamento[]
  estudios           CitaEstudio[]
  paciente          PacienteCita
  finalizada        Boolean           @default(false)
  id_userDoctor     String
  
}

model Estudio {
  id_estudio         String   @id @default(auto()) @map("_id") @db.ObjectId
  fecha_realizacion  DateTime
  tipo_estudio       String
  resultado          String?
  codigo_referencia  String
  observaciones      String?
  medico_solicitante String?
  urgente            Boolean?
}

model Medicamento {
  id_medicamento         String    @id @default(auto()) @map("_id") @db.ObjectId
  nombre_med             String?
  marca                  String?
  fecha_vencimiento      DateTime?
  dosis_hs               String?
  agente_principal       String?
  efectos_secundarios    String?
  lista_negra            Boolean?
  categoria              String?
  contraindicaciones     String?
  prescripcion_requerida Boolean?
  eliminadoLog           Boolean  @default(false)
  stock                  Int       @default(0) 
}

model Enfermedad {
  id_enfermedad String  @id @default(auto()) @map("_id") @db.ObjectId
  nombre_enf    String
  sintomas      String
  gravedad      String?
   eliminadoLog       Boolean @default(false)

}

model Paciente {
  id_paciente       String         @id @default(auto()) @map("_id") @db.ObjectId
  dni               String?
  nombre_paciente   String?
  apellido_paciente String?
  edad              Int?
  altura            Int?
  telefono          String?
  fecha_nacimiento  DateTime?
  sexo              String?
  grupo_sanguineo   String?
  alergias          String?
    obra_social       String?    // Nuevo
  email             String?    // Nuevo
  direccion         String?    // Nuevo
  nacionalidad      String?    // Nuevo
  eliminadoLog      Boolean  @default(false)

}

model Usuario {
  id_Usuario     String  @id @default(auto()) @map("_id") @db.ObjectId
  nombre_usuario String
  email          String
  password       String
  deletLogico    Boolean @default(false)
  rol_usuario    String
  nombre_completo  String
  especialidad     String
  matricula        String   @unique
  dni              String   @unique
  telefono         String?
  
}

enum Accion {
  CREATE
  UPDATE
  DELETE
  READ
  ARCHIVE
}

model Auditoria {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  fecha        DateTime @default(now())
  accion       Accion   // Usamos el enum Accion aquí
  usuarioId    String?  // ID del usuario que realizó la acción
  usuarioNom      String  // Nombre del usuario o correo electrónico del usuario que realizó la acción
  detalles     String? // Detalles de la acción o cambios realizados
  model        String  // El nombre del modelo o entidad afectada (Ej: "Paciente", "Cita", etc.)
  registro_id  String? // El ID del registro afectado en la base de datos (ej: id_cita, id_paciente, etc.)
  createdAt    DateTime @default(now()) // Fecha y hora de creación del registro de auditoría
  updatedAt    DateTime @updatedAt // Fecha y hora de la última actualización del registro
}

