# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Estudio {
  id_estudio: ID
  fecha_realizacion: DateTime
  tipo_estudio: String
  resultado: String
  codigo_referencia: String
  observaciones: String
  medico_solicitante: String!
  urgente: Boolean
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type EstudioEdge {
  node: Estudio!
  cursor: String!
}

type AggregateCount {
  count: Float!
}

type EstudioResultadoBusqueda {
  edges: [EstudioEdge!]!
  aggregate: AggregateCount!
}

type Medicamento {
  id_medicamento: ID
  nombre_med: String
  marca: String
  fecha_vencimiento: DateTime
  dosis_hs: String
  agente_principal: String
  efectos_secundarios: String
  lista_negra: Boolean
  categoria: String
  contraindicaciones: String
  prescripcion_requerida: Boolean
  eliminadoLog: Boolean
  stock: Int
}

type MedicamentoEdge {
  node: Medicamento!
  cursor: String!
}

type MedicamentoResultadoBusqueda {
  edges: [MedicamentoEdge!]!
  aggregate: AggregateCount!
}

type Enfermedad {
  id_enfermedad: String
  nombre_enf: String!
  sintomas: String
  gravedad: String
}

type EnfermedadEdge {
  node: Enfermedad!
  cursor: String!
}

type EnfermedadResultadoBusqueda {
  edges: [EnfermedadEdge!]!
  aggregate: AggregateCount!
}

type Paciente {
  id_paciente: ID
  dni: String
  nombre_paciente: String
  apellido_paciente: String
  edad: Int
  altura: Int
  telefono: String
  fecha_nacimiento: DateTime
  sexo: String
  grupo_sanguineo: String
  alergias: String
  obra_social: String
  email: String
  direccion: String
  nacionalidad: String
  eliminadoLog: Boolean
}

type PacienteEdge {
  node: Paciente!
  cursor: String!
}

type PacientesResultadoBusqueda {
  edges: [PacienteEdge!]!
  aggregate: AggregateCount!
}

type Usuario {
  id_Usuario: String!
  nombre_usuario: String
  email: String
  password: String!
  deletLogico: Boolean
  rol_usuario: String
  nombre_completo: String
  especialidad: String
  matricula: String
  telefono: String
  dni: String
}

type UsuarioEdge {
  node: Usuario!
  cursor: String!
}

type UsuarioResultadoBusqueda {
  edges: [UsuarioEdge!]!
  aggregate: AggregateCount!
}

type Cita {
  id_cita: ID
  motivoConsulta: String!
  observaciones: String
  fechaProgramada: String
  cancelada: Boolean
  finalizada: Boolean
  medicamentos: [Medicamento!]
  estudios: [Estudio!]
  enfermedades: [Enfermedad!]
  paciente: Paciente
  doctor: Usuario
}

type CitaEdge {
  node: Cita!
  cursor: String!
}

type CitaResultadoBusqueda {
  edges: [CitaEdge!]!
  aggregate: AggregateCount!
}

type Query {
  getCita(id: String!): Cita
  getCitas(skip: Int, limit: Int, where: CitaWhereInput): CitaResultadoBusqueda!
  getCitasByFecha(skip: Int, limit: Int, where: CitaWhereInput): CitaResultadoBusqueda!
  getEstudio(id: String!): Estudio
  getEstudios(where: EstudioWhereInput, skip: Int, limit: Int): EstudioResultadoBusqueda!
  getMedicamento(id: String!): Medicamento
  getMedicamentos(skip: Int, limit: Int, where: MedicamentoWhereInput): MedicamentoResultadoBusqueda!
  getStock(medicamentoId: String!): Float!
  getPaciente(id: String!): Paciente
  getPacientes(skip: Int, limit: Int, where: PacienteWhereInput): PacientesResultadoBusqueda!
  getEnfermedadById(id: String!): Enfermedad
  getEnfermedades(where: EnfermedadWhereInput, skip: Int, limit: Int): EnfermedadResultadoBusqueda!
  getUsuario(email: String!): Usuario
  getUsuarios(skip: Int, limit: Int, where: UsuarioWhereInput): UsuarioResultadoBusqueda!
  getUsuarioById(id: String!): Usuario
}

input CitaWhereInput {
  id_cita: ID
  motivoConsulta: String
  finalizada: Boolean
  fechaProgramada: DateTime
  observaciones: String
  cancelada: Boolean
  buscar: String
  estudios: [EstudioInput!]
  medicamentos: [MedicamentoInput!]
  enfermedades: [EnfermedadInput!]
  paciente: PacienteCitaInput
  doctor: UsuarioCitaInput
}

input EstudioInput {
  id_estudio: ID
  fecha_realizacion: DateTime
  tipo_estudio: String
  resultado: String
  codigo_referencia: String
  observaciones: String
  medico_solicitante: String
  urgente: Boolean
}

input MedicamentoInput {
  id_medicamento: ID
  nombre_med: String
  marca: String
  fecha_vencimiento: DateTime
  dosis_hs: String
  agente_principal: String
  efectos_secundarios: String
  lista_negra: Boolean
  categoria: String
  contraindicaciones: String
  prescripcion_requerida: Boolean
  stock: Int
}

input EnfermedadInput {
  id_enfermedad: String
  nombre_enf: String
  sintomas: String
  gravedad: String
}

input PacienteCitaInput {
  id_paciente: ID
  dni: String
  nombre_paciente: String
  apellido_paciente: String
}

input UsuarioCitaInput {
  id: ID
  nombre_usuario: String!
  email: String
  password: String
  rol_usuario: String
  nombre_completo: String!
  especialidad: String
  matricula: String!
  telefono: String
  dni: String!
}

input EstudioWhereInput {
  id_estudio: ID
  fecha_realizacion: DateTime
  tipo_estudio: String
  resultado: String
  codigo_referencia: String
}

input MedicamentoWhereInput {
  id_medicamento: ID
  nombre_med: String
  marca: String
  fecha_vencimiento: DateTime
  dosis_hs: String
  agente_principal: String
  efectos_secundarios: String
  lista_negra: Boolean
  categoria: String
  contraindicaciones: String
  prescripcion_requerida: Boolean
  eliminadoLog: Boolean
  stock: Int
}

input PacienteWhereInput {
  id_paciente: String
  dni: String
  nombre_paciente: String
  apellido_paciente: String
  edad: Int
  altura: Int
  telefono: String
  fecha_nacimiento: DateTime
  sexo: String
  grupo_sanguineo: String
  alergias: String
  obra_social: String
  email: String
  direccion: String
  nacionalidad: String
  eliminadoLog: Boolean
}

input EnfermedadWhereInput {
  id_enfermedad: String
  nombre_enf: String
  sintomas: String
  gravedad: String
}

input UsuarioWhereInput {
  id: ID
  nombre_usuario: String
  email: String
  rol_usuario: String
  deletLogico: Boolean
  nombre_completo: String
  especialidad: String
  matricula: String
  telefono: String
  dni: String
}

type Mutation {
  createCita(data: CitaInput!, paciente: PacienteCitaInput!): String!
  updateCita(data: CitaInput!, citaId: String!): String!
  createCitaEnfermedad(citaId: String!, enfermedades: [EnfermedadInput!]!): String!
  createCitaMedicamento(citaId: String!, medicamentos: [MedicamentoInput!]!): String!
  createCitaEstudio(citaId: String!, estudios: [EstudioInput!]!): String!
  cancelarCita(id: String!): String!
  finalizarCita(id: String!): String!
  createEstudio(data: EstudioInput!, idCita: String!): String!
  updateEstudio(data: EstudioInput!, estudioId: String!): String!
  createMedicamento(data: MedicamentoInput!): String!
  updateMedicamento(data: MedicamentoInput!, medicamentoId: String!): String!
  deleteMedicamentoLog(id: String!): String!
  deleteMedicamento(id: String!): String!
  aumentarStock(medicamentoId: String!, cantidad: Int!): String!
  reducirStock(medicamentoId: String!, cantidad: Int!): String!
  createPaciente(data: PacienteInput!): String!
  updatePaciente(data: PacienteInput!, pacienteId: String!): String!
  ElimiarPacienteLog(pacienteId: String!): String!
  EliminarPaciente(pacienteId: String!): String!
  createEnfermedad(data: EnfermedadInput!): String!
  updateEnfermedad(data: EnfermedadInput!, enfermedadId: String!): String!
  deleteEnfermedad(id: String!): String!
  createUsuario(data: UsuarioInput!): String!
  updateUsuario(data: UsuarioInput!, usuarioId: String!): String!
  deleteUsuario(id: String!): String!
  solicitarRecuperacionPassword(email: String!): String!
  resetearPassword(token: String!, nuevaPassword: String!): String!
}

input CitaInput {
  id_cita: ID
  motivoConsulta: String
  observaciones: String
  paciente: PacienteCitaInput
  fechaProgramada: DateTime
  finalizada: Boolean
  doctor: UsuarioCitaInput
}

input PacienteInput {
  dni: String
  nombre_paciente: String
  apellido_paciente: String
  edad: Int
  altura: Int
  telefono: String
  fecha_nacimiento: DateTime
  sexo: String
  grupo_sanguineo: String
  alergias: String
  obra_social: String
  email: String
  direccion: String
  nacionalidad: String
}

input UsuarioInput {
  id: ID
  nombre_usuario: String!
  email: String
  password: String
  rol_usuario: String
  nombre_completo: String!
  especialidad: String!
  matricula: String!
  telefono: String
  dni: String!
}